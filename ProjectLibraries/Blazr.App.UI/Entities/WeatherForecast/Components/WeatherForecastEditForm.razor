@*
/// ============================================================
/// Author: Shaun Curtis, Cold Elm Coders
/// License: Use And Donate
/// If you use it, donate something to a charity somewhere
/// ============================================================
*@

@namespace Blazr.App.UI
@inherits BlazrAppEditorForm<WeatherForecastEditContext,DboWeatherForecast, WeatherForecastEntity>
@inject IForeignKeyService<FkWeatherSummary, WeatherSummaryEntity> FkSummaryService
@inject IForeignKeyService<FkWeatherLocation, WeatherLocationEntity> FkLocationService

<UIContainer Size=BootstrapSize.Fluid>
    <UIFormRow>
        <UIColumn Columns=12 MediumColumns=6>
            <BlazrInputControl FieldObjectUid=this.RecordContext.InstanceId Type="date" class="form-control" UpdateOnInput=true DisplayName="Date" FieldName="@WeatherForecastConstants.Date" @bind-Value=this.RecordContext.Date Hint="Enter a weather forecast date" />
        </UIColumn>
        <UIColumn Columns=12 MediumColumns=6>
            <BlazrInputControl FieldObjectUid=this.RecordContext.InstanceId Type="number" class="form-control" UpdateOnInput=true DisplayName="Temperature &deg;C" FieldName="@WeatherForecastConstants.TemperatureC" @bind-Value=this.RecordContext.TemperatureC Hint="Enter a weather forecast temperature" />
        </UIColumn>
    </UIFormRow>
    <UIFormRow>
        <UIColumn Columns=12 MediumColumns=6>
            <BlazrSelectControl FieldObjectUid=this.RecordContext.InstanceId class="form-control" DisplayName="Summary" FieldName="@WeatherForecastConstants.SummaryId" @bind-Value=this.RecordContext.SummaryId Hint="Select a summary from the list">
                @this.SummaryList
            </BlazrSelectControl>
        </UIColumn>
        <UIColumn Columns=12 MediumColumns=6>
            <BlazrSelectControl FieldObjectUid=this.RecordContext.InstanceId class="form-control" DisplayName="Location" FieldName="@WeatherForecastConstants.LocationId" @bind-Value=this.RecordContext.LocationId Hint="Select a location from the list">
                @this.LocationList
            </BlazrSelectControl>
        </UIColumn>
    </UIFormRow>
</UIContainer>

@code {
    // If we come to this form from the Weather Location Dash we already have the WeatherLocationId
    // So we have a parameter property to accept it
    [Parameter] public Guid WeatherLocationId { get; set; } = Guid.Empty;

    // We need to get the two foreign keys the for uses
    protected override async ValueTask<bool> OnParametersChangedAsync(bool firstRender)
    {
        await this.FkSummaryService.GetFkList();
        await this.FkLocationService.GetFkList();
        return true;
    }

    // Render fragment for the Summary List from the Foreign Key service
    private RenderFragment SummaryList => (__builder) =>
    {
        @foreach (var item in this.FkSummaryService.Items)
        {
            <option value="@item.Id">@item.Name</option>
        }
    };

    // Render fragment for the Location List from the Foreign Key service
    private RenderFragment LocationList => (__builder) =>
    {
        @foreach (var item in this.FkLocationService.Items)
        {
            <option value="@item.Id">@item.Name</option>
        }
    };

    // Override the GetNewRecord to fix the default values for the New Form
    // Note we use the WeatherLocationId if we have one
    protected override Task<DboWeatherForecast> GetNewRecord()
    {
        DboWeatherForecast record = new() { Date = DateOnly.FromDateTime(DateTime.Now.AddDays(1)) };
        if (this.WeatherLocationId != Guid.Empty)
            record = record with { WeatherLocationId = this.WeatherLocationId };

        return Task.FromResult(record);
    }
}
