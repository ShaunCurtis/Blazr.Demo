@namespace Blazr.App.UI
@typeparam TRecord where TRecord : class, new()
@typeparam TEntity where TEntity  : class, IEntity
@inherits BlazrViewerForm<TRecord, TEntity>

@code {
    protected override RenderFragment TemplatedContent => __builder =>
        {
            <CascadingAuthenticationState>
                <UIContainer Size=BootstrapSize.Fluid class="@this.ContainerCss">
                    <FormViewTitle>
                        @this.FormTitle
                    </FormViewTitle>
                    <UIContainer Size=BootstrapSize.Fluid>
                        <UIFormRow>
                            <UIColumn Columns=12 class="text-end text-right mt-2">
                                <UIAuthorizeButton Policy=@AppAuthorizationPolicies.IsEditorPolicy
                                       AuthFields="this.GetAuthFields(Service.Record)"
                                       type="button"
                                       ButtonType=UIButtonType.Edit
                                       ClickEvent=this.EditRecordAsync>
                                    Edit
                                </UIAuthorizeButton>
                                <UIButton ButtonType=UIButtonType.Exit ClickEvent=this.Exit>
                                    Exit
                                </UIButton>
                            </UIColumn>
                        </UIFormRow>
                    </UIContainer>
                    <UILoader State="this.LoadState">
                        @this.Content
                    </UILoader>
                </UIContainer>
            </CascadingAuthenticationState>
        };

    protected string ContainerCss => this.Modal is null
    ? "p-2 bg-light border border-brand mt-2"
    : "p-2 bg-light";

    protected virtual AppAuthFields GetAuthFields(TRecord? record)
        => new AppAuthFields { OwnerId = (record as IAuthRecord)?.OwnerId ?? Guid.Empty };
}
