@namespace Blazr.App.UI
@typeparam TRecord where TRecord : class, new() 
@typeparam TEditRecord where TEditRecord : class, IEditRecord<TRecord>, new() 
@typeparam TEntity where TEntity  : class, IEntity
@inherits EditorForm<TRecord, TEditRecord, TEntity>

@code {
    protected RenderFragment EditButtonMarkup => 
        __builder =>
        {
        <UIContainer Size=BootstrapSize.Fluid>
            <UIFormRow>
                <UIColumn Columns=12 MediumColumns=7 class="">
                    <UIAlertMessage AlertColour="@this.alertColour" Message="@this.alertMessage" />
                </UIColumn>
                <UIColumn Columns=12 MediumColumns=5 class="text-end text-right">
                    <UIButton class="btn-warning btn-sm" Show="this.IsDirty && !this.IsNew" ClickEvent="this.ResetRecord">Reset Fields</UIButton>
                    <UIButton class="btn-success btn-sm" Show=this.IsNew Disabled="!this.IsDirty" ClickEvent="this.AddRecord">Add</UIButton>
                    <UIButton class="btn-success btn-sm" Show=this.IsNew Disabled="!this.IsDirty" ClickEvent="this.AddRecordAndExit">Add and Exit</UIButton>
                    <UIButton class="btn-success btn-sm" Show=!this.IsNew Disabled="!this.IsDirty" ClickEvent="this.SaveRecord">Save</UIButton>
                    <UIButton class="btn-success btn-sm" Show=!this.IsNew Disabled="!this.IsDirty" ClickEvent="this.SaveRecordAndExit">Save and Exit</UIButton>
                    <UIButton class="btn-dark btn-sm" Show="!this.IsDirty" ClickEvent="this.Exit">Exit</UIButton>
                    <UIButton class="btn-danger btn-sm" Show="this.IsDirty" ClickEvent="this.ExitWithoutSaving">Exit Without Saving</UIButton>
                </UIColumn>
            </UIFormRow>
        </UIContainer>
        };
}
