@*
    /// ============================================================
    /// Author: Shaun Curtis, Cold Elm Coders
    /// License: Use And Donate
    /// If you use it, donate something to a charity somewhere
    /// ============================================================
*@

@namespace Blazr.UI.Bootstrap
@inherits UIListColumnBase<TRecord>
@typeparam TRecord where TRecord : class, new()

@if (this.IsHeader)
{
    @if (_isSortField)
    {
        <th class="@this.HeaderCss" @onmouseover="@(() => ShowSorting(true))" @onmouseout="@(() => ShowSorting(false))">
            <div class="dropdown">
                <div data-bs-toggle="dropdown" aria-expanded="false">
                    <span class="me-1 mr-1">
                        @((MarkupString)this.HeaderTitle)
                    </span>
                    <span class="@SortIconCss"></span>
                </div>
                <ul class="dropdown-menu @showCss " aria-labelledby="dropdownMenuButton2">
                    <li class="dropdown-item @GetActive(false)" @onclick="() => this.SortClick(false)">Ascending</li>
                    <li class="dropdown-item @GetActive(true)" @onclick="() => this.SortClick(true)">Descending</li>
                </ul>
            </div>
        </th>
    }
    else
    {
        <th class="@this.HeaderCss">
            @((MarkupString)this.HeaderTitle)
        </th>
    }
}
else if (this.isMaxRowColumn)
{
    <td class="@this.TDCss">
        <div class="grid-overflow">
            <div class="grid-overflowinner">
                @ChildContent
            </div>
        </div>
    </td>
}
else
{
    <td class="@this.TDCss">
        @this.ChildContent
    </td>
}

@code {

    private string HeaderCss
     => CSSBuilder.Class()
         .AddClass(IsHeaderNoWrap, "header-column-nowrap", "header-column")
         .AddClass(NoWrap, "text-nowrap")
         .AddClass("align-baseline")
         .AddClass(this.Class)
         .Build();

    private string TDCss
        => CSSBuilder.Class()
            .AddClass(this.isMaxRowColumn, "max-column", "data-column")
            .AddClass(this.NoWrap, "text-nowrap")
            .AddClass(this.Class)
            .Build();

    private string SortIconCss
    => this.ListContext is null || !this.IsCurrentSortField()
        ? UICssClasses.NotSortedClass
        : this.ListContext.ListState.SortDescending
            ? UICssClasses.AscendingClass
            : UICssClasses.DescendingClass;
}
