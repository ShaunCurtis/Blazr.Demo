@using Microsoft.AspNetCore.Components.Forms
@namespace Blazr.App.UI.Mud
@inject MudPresenterFactory PresenterFactory

<MudDialog>
    <DialogContent>

        <MudGrid>
            <MudItem xs="12" sm="6">
                <MudField Class="mb-2" Label="Date" Variant="Variant.Filled">
                    @this.Presenter.Item.Date.ToString("dd-MMM-yy")
                </MudField>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudField Class="mb-2" Label="Summary" Variant="Variant.Filled">
                    @this.Presenter.Item.Summary
                </MudField>
            </MudItem>
        </MudGrid>

        <MudGrid>
            <MudItem xs="12" sm="6">
                <MudField Class="mb-2" Label="Temperature &deg;C" Variant="Variant.Filled">
                    @this.Presenter.Item.Temperature.TemperatureC.ToString("N0")
                </MudField>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudField Class="mb-2" Label="Temperature &deg;F" Variant="Variant.Filled">
                    @this.Presenter.Item.Temperature.TemperatureF.ToString("N0")
                </MudField>
            </MudItem>
        </MudGrid>

        <MudGrid>
            <MudItem xs="12" lg="8">
                <MudField Class="mb-2" Label="Full Id" Variant="Variant.Filled">
                    @this.Presenter.Item.WeatherForecastId.Value.ToString()
                </MudField>
            </MudItem>
        </MudGrid>

    </DialogContent>

    <DialogActions>
        <MudButton IconClass="@Icons.Material.Filled.Close" Color="Color.Primary" OnClick="this.Close">
            Exit
        </MudButton>
    </DialogActions>

</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public WeatherForecastId WeatherForecastId { get; set; } = default!;

    private IViewPresenter<DmoWeatherForecast, WeatherForecastId> Presenter = default!;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);

        if (this.Presenter is null)
        {
            ArgumentNullException.ThrowIfNull(WeatherForecastId);
            this.Presenter = await this.PresenterFactory.CreateViewPresenterAsync<DmoWeatherForecast, WeatherForecastId>(this.WeatherForecastId);
        }

        await base.SetParametersAsync(ParameterView.Empty);
    }

    private void Close()
        => MudDialog?.Close(DialogResult.Ok(true));
}

