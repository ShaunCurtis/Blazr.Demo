@namespace Blazr.App.UI.FluentUI
@implements IDisposable
<FluentGrid Style="padding:1em;" Spacing="1" AdaptiveRendering="true">
    <FluentGridItem sm="12" md="6">
        <FluentTextField Style="width: 100%;"
                         Value="@this.Composite.Invoice.InvoiceId.Value.ToString()"
                         Label="Full Id"
                         ReadOnly />
    </FluentGridItem>
    <FluentGridItem sm="12" md="6">
        <FluentTextField Style="width: 100%;"
                         Value="@this.Composite.Invoice.CustomerName"
                         Label="Customer Name"
                         ReadOnly />
    </FluentGridItem>
    <FluentGridItem sm="12" md="6">
        <FluentTextField Style="width: 100%;"
                         Value="@this.Composite.Invoice.Date.ToString()"
                         Label="Invoice Date"
                         ReadOnly />
    </FluentGridItem>
    <FluentGridItem sm="12" md="6">
        <FluentTextField Style="width: 100%;"
                         Value="@this.Composite.Invoice.TotalAmount.ToString()"
                         Label="Invoice Amount"
                         ReadOnly />
    </FluentGridItem>
</FluentGrid>

@code {
    [CascadingParameter] private InvoiceComposite Composite { get; set; } = default!;

    protected override void OnInitialized()
    {
        ArgumentNullException.ThrowIfNull(this.Composite);
        this.Composite.StateHasChanged += this.OnCompositeStateChanged;
    }

    private void OnCompositeStateChanged(object? sender, EventArgs e)
    {
        this.StateHasChanged();
    }

    public void Dispose()
    {
        this.Composite.StateHasChanged -= this.OnCompositeStateChanged;
    }
}
